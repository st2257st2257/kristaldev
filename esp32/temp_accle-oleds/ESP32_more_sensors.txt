// BME280
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <vector>
using namespace std;
#define SEALEVELPRESSURE_HPA (1013.25)
Adafruit_BME280 bme;

// OLED
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_FeatherOLED.h>

// Accel
#include <Adafruit_MPU6050.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_Sensor.h>

vector<vector<double>> a;

Adafruit_FeatherOLED oled = Adafruit_FeatherOLED();
Adafruit_MPU6050 mpu;
Adafruit_SSD1306 display = Adafruit_SSD1306(128, 32, &Wire);

void setup() {
	Serial.begin(9600);

	if (!bme.begin(0x76)) {
		Serial.println("Could not find a valid BME280 sensor, check wiring!");
		while (1);
	}

  oled.init();
  oled.setBatteryVisible(true);

  if (!mpu.begin()) {
    Serial.println("Sensor init failed");
    while (1)
      yield();
  }
}

void loop() {
	Serial.print("Temperature = ");
	Serial.print(bme.readTemperature());
	Serial.println("*C");

  vector<double> res = {bme.readTemperature(),bme.readPressure() / 100.0F, bme.readAltitude(SEALEVELPRESSURE_HPA), bme.readHumidity()};
  a.push_back(res);

	Serial.println();
	delay(1000);

  show_battery();
  delay(1000);
}


void show_battery(){
  // clear the current count
  oled.clearDisplay();

  // get the current voltage of the battery
  float battery = oled.getBatteryVoltage();

  // update the battery icon
  oled.setBattery(battery);
  oled.renderBattery();


  // TEMPERATURE
  oled.print("T: ");
  oled.print(bme.readTemperature());

  oled.print("  P: ");
  oled.print(bme.readPressure() / 100.0F);

  oled.print("  H: ");
  oled.print(bme.readHumidity());


  // ACCELEROMETR
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  
  oled.print(" x:");
  oled.println(a.acceleration.x, 1);
  oled.print("y: ");
  oled.print(a.acceleration.y, 1);
  oled.print(" z: ");
  oled.print(a.acceleration.z, 1);
  oled.println("");

  oled.display();
}




